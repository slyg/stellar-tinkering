#!/usr/bin/env node

const Stellar = require("stellar-sdk");
const { TimeoutInfinite } = require("stellar-base");
const pairs = require("../pairs.json");

const server = new Stellar.Server("https://horizon-testnet.stellar.org");

const transaction = async (pairA, pairB, asset, amount) => {
  const standardTxFee = await server.fetchBaseFee();

  const txOptions = {
    fee: standardTxFee,
    networkPassphrase: Stellar.Networks.TESTNET
  };

  const paymentToB = {
    destination: pairB.publicKey,
    asset,
    amount
  };

  const accountA = await server.loadAccount(pairA.publicKey);

  const transaction = new Stellar.TransactionBuilder(accountA, txOptions)
    .addOperation(Stellar.Operation.payment(paymentToB))
    .addMemo(Stellar.Memo.text("Test Transaction"))
    .setTimeout(TimeoutInfinite)
    .build();

  const StellarPairA = Stellar.Keypair.fromSecret(pairA.secretSeed);

  transaction.sign(StellarPairA);

  await server.submitTransaction(transaction);
};

const [pairA, pairB] = pairs;

transaction(pairA, pairB, Stellar.Asset.native(), "100.0000000")
  .then(() => console.log("ok"))
  .catch(e => {
    console.error(e);
    throw e;
  });
